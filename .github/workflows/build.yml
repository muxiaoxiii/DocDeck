name: Build & Release DocDeck

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --windowed --name "DocDeck" --icon=docdeck.icns main.py

      - name: Create .dmg installer
        run: |
          brew install create-dmg
          create-dmg dist/DocDeck.app \
            --overwrite \
            --volname "DocDeck Installer" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "DocDeck.app" 150 150 \
            --hide-extension "DocDeck.app" \
            --app-drop-link 450 150 \
            dist

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: DocDeck-macOS
          path: |
            dist/DocDeck.app
            dist/DocDeck Installer.dmg

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --windowed --name "DocDeck" main.py

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: DocDeck-Windows
          path: dist/DocDeck.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --windowed --name "DocDeck" main.py

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: DocDeck-Linux
          path: dist/DocDeck

  release:
    needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v3
        with:
          name: DocDeck-macOS
          path: release/macos

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v3
        with:
          name: DocDeck-Windows
          path: release/windows

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: DocDeck-Linux
          path: release/linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: DocDeck ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            release/**/*